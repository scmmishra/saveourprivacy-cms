/* tslint:disable */
/**
 * This file was automatically generated by Payload CMS.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "principles".
 */
export interface Principle {
  id: string;
  title?: string;
  body: {
    [k: string]: unknown;
  }[];
  layout: {
    name: string;
    prinicpleBody: {
      [k: string]: unknown;
    }[];
    id?: string;
    blockName?: string;
    blockType: 'principle-block';
  }[];
  meta: {
    title?: string;
    description?: string;
    image?: string | Media;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt: string;
  url?: string;
  filename?: string;
  mimeType?: string;
  filesize?: number;
  width?: number;
  height?: number;
  sizes: {
    thumbnail: {
      url?: string;
      width?: number;
      height?: number;
      mimeType?: string;
      filesize?: number;
      filename?: string;
    };
    portrait: {
      url?: string;
      width?: number;
      height?: number;
      mimeType?: string;
      filesize?: number;
      filename?: string;
    };
    hero: {
      url?: string;
      width?: number;
      height?: number;
      mimeType?: string;
      filesize?: number;
      filename?: string;
    };
  };
  createdAt: string;
  updatedAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "bill".
 */
export interface Bill {
  id: string;
  title: string;
  introduction: {
    [k: string]: unknown;
  }[];
  preamble: {
    [k: string]: unknown;
  }[];
  chapters: {
    title: string;
    sections: {
      title: string;
      body?: {
        [k: string]: unknown;
      }[];
      id?: string;
      blockName?: string;
      blockType: 'section-block';
    }[];
    id?: string;
    blockName?: string;
    blockType: 'chapter-block';
  }[];
  meta: {
    title?: string;
    description?: string;
    image?: string | Media;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  name?: string;
  roles: ('admin' | 'public')[];
  enableAPIKey?: boolean;
  apiKey?: string;
  apiKeyIndex?: string;
  email?: string;
  resetPasswordToken?: string;
  resetPasswordExpiration?: string;
  loginAttempts?: number;
  lockUntil?: string;
  createdAt: string;
  updatedAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "authors".
 */
export interface Author {
  id: string;
  name: string;
  bio?: string;
  createdAt: string;
  updatedAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blog".
 */
export interface Blog {
  id: string;
  title?: string;
  slug?: string;
  author?: string[] | Author[];
  publishDate?: string;
  content?: {
    [k: string]: unknown;
  }[];
  meta: {
    title?: string;
    description?: string;
    image?: string | Media;
  };
  _status?: 'draft' | 'published';
  createdAt: string;
  updatedAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "coverage".
 */
export interface Coverage {
  id: string;
  title: string;
  link: string;
  publishDate?: string;
  dateOfPublication: string;
  source: string;
  _status?: 'draft' | 'published';
  createdAt: string;
  updatedAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "individual".
 */
export interface Individual {
  id: string;
  name: string;
  date?: string;
  email: string;
  organisation?: string;
  designation?: string;
  declaration?: boolean;
  createdAt: string;
  updatedAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "organisation".
 */
export interface Organisation {
  id: string;
  orgName: string;
  date?: string;
  link: string;
  name: string;
  email: string;
  designation?: string;
  createdAt: string;
  updatedAt: string;
}
